function loadDialogWidget(){
    if(InitData["messageData"]["messageFriendList"].length==0){
        //产生一个全局判断变量，用于在点开消息时判断
        //如果全局判断变量为True则弹出提示框(请通过左边好友列表发起消息)，若为False则展示消息
        //预计会在InitData中加入变量保存最新消息数量
    }else{
        //根据InitData中的新消息数量更新提示泡中的数字，若为0则不显示提示泡
        //根据InitData中的messageFriendList中的内容更新dialog-user-list
    }
}

//前端编写信息插入函数
function insertMessage(insertType,Content){
    //insertType:0(timeStamp) 1(to-me) 2(to-other)
    
}

数据库user_info中添加字段new_message_number

后台通知前台更新消息框时，须附带更新内容
当收到新消息提醒时，前端需要更具不同的情况进行不同区域的刷新
1、message_widget未显示时调用loadMessageWidget()
2、message_widget显示时
    a、active用户为消息发送方调用insertMessage()
    b、active用户不为消息发送方调用loadMessageFriendList()

点击用户列表中的发送消息通过ajax后执行loadMessageWidget()
在widget中点击的active friendlist通过ajax

消息列表接受到新消息情况解析
1、消息列表关闭的情况下
    调用loadMessageWidget方法
2、消息列表打开的情况下
    a、active对象为消息发送方，insert方法插入消息
    b、active对象不为消息发送方，刷新messageFriendList 刷新bubble
GameRoomData中有字段tableState 若为初始状态则不更新棋盘信息，若为游戏状态，则根据后台棋盘信息加载棋盘

进入游戏后连接GameRoom WebSocket
GameRoomWebSocket的OnOpen中如对应的roomId的SocketCache中不为空，则需遍历通知刷新GameRoom界面
GameRoomSocketCache结构
{
    "1":{
            "3":{
                    "webSocket":self,
                    "readyState":false,
                    "chessColor":"",
                    "winTime":0,
                    "chessTime":"",
                    "yourTurn":false
                },
            "6":{
                    "webSocket":self,
                    "readyState":false,
                    "chessColor":"",
                    "winTime":0,
                    "chessTime":"",
                    "yourTurn":false
                },
            "gameTime":"00:00"
            "stepRecord":[
                            {
                                "playerId":"1",
                                "chessType":"black",
                                "point":[0,3]
                            },
                            {
                                "playerId":"1",
                                "chessType":"black",
                                "point":[0,3]
                            }
                         ]
        }
}
每局结束提醒前端是否需要保存对局，结束后清空stepRecord


