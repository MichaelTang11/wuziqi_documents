function loadDialogWidget(){
    if(InitData["messageData"]["messageFriendList"].length==0){
        //产生一个全局判断变量，用于在点开消息时判断
        //如果全局判断变量为True则弹出提示框(请通过左边好友列表发起消息)，若为False则展示消息
        //预计会在InitData中加入变量保存最新消息数量
    }else{
        //根据InitData中的新消息数量更新提示泡中的数字，若为0则不显示提示泡
        //根据InitData中的messageFriendList中的内容更新dialog-user-list
    }
}

//前端编写信息插入函数
function insertMessage(insertType,Content){
    //insertType:0(timeStamp) 1(to-me) 2(to-other)
    
}

数据库user_info中添加字段new_message_number

后台通知前台更新消息框时，须附带更新内容
当收到新消息提醒时，前端需要更具不同的情况进行不同区域的刷新
1、message_widget未显示时调用loadMessageWidget()
2、message_widget显示时
    a、active用户为消息发送方调用insertMessage()
    b、active用户不为消息发送方调用loadMessageFriendList()

点击用户列表中的发送消息通过ajax后执行loadMessageWidget()
在widget中点击的active friendlist通过ajax

cursor.execute("UPDATE user SET login_state=1,state=1 WHERE user_id=%s",str(row['user_id']))

 userId = self.get_secure_cookie("userId").decode("utf-8")
        self.clear_cookie('userId')
        returnJson={"status":"00"}
        self.write(json.dumps(returnJson, ensure_ascii=False))
        cursor.execute("UPDATE user SET login_state=0,state=0 WHERE user_id=%s",userId)
        logging.info("cookie清除成功！")